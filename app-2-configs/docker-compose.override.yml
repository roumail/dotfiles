services:
  pytest:
    container_name: pytest
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - PIP_INDEX_URL=https://$RES_ARTIFACTORY_USER:$RES_ARTIFACTORY_PASSWORD@artifactory.tools.digital.engie.com/artifactory/api/pypi/gemres-core-pypi-prod/simple
        - PIP_TRUSTED_HOST=artifactory.tools.digital.engie.com
        - VERSION=local
    command: bash
    # command: >
    #   "python -m flask run --debug -h 0.0.0.0 -p ${B2E2_HOST_PORT}"
    volumes:
      - ${APP_PATH}:/app:delegated
    environment:
      - REDIS_URL=redis://redis:6379/
      - TOURBILLON_POSTGRES_HOST=tourbillon_postgres
      - TOURBILLON_POSTGRES_DB=tourbillon
      - TOURBILLON_POSTGRES_USER=postgres
      - TOURBILLON_POSTGRES_HOST_AUTH_METHOD=trust
      - TOURBILLON_REDIS_HOST=redis
      - TOURBILLON_REDIS_DB=0
      - POSTGRES_POOL_INACTIVE_TIMEOUT=1
      - POSTGRES_POOL_SIZE=5
      - FLASK_DEBUG=1
      - AWS_ENDPOINT_URL=http://localstack:4566

    env_file:
      - .env
    depends_on:
      - redis
      - tourbillon_postgres
      - localstack

  tourbillon_postgres:
    container_name: ${CONTAINER_NAME}-tourbillon
    expose:
      - 5432
    ports: []
    #   - '${TOURBILLON_HOST_POSTGRES_PORT}:5432'
    environment:
      - TOURBILLON_POSTGRES_PORT=5432
      - TOURBILLON_REDIS_PORT=6379
    # volumes:
    #   - ~/docker-data/${VOLUME_MOUNT_ROOT}/tourbillon_postgresql/data:/var/lib/postgresql/data:delegated
    #   - ~/docker-data/${VOLUME_MOUNT_ROOT}/tourbillon_postgresql-backup/:/db-backup:delegated

  app_postgres:
    container_name: ${CONTAINER_NAME}-app_postgres
    ports: []
    #   - '${APP_HOST_POSTGRES_PORT}:5432'
    # volumes:
    #   - ~/docker-data/${VOLUME_MOUNT_ROOT}/app_postgresql/data:/var/lib/postgresql/data:delegated
    #   - ~/docker-data/${VOLUME_MOUNT_ROOT}/app_postgresql-backup/:/db-backup/:delegated
    #   - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:delegated

  localstack:
    container_name: ${CONTAINER_NAME}-localstack_main  
    ports: []    
    #   - "${LOCALSTACK_HOST_GATEWAY_PORT}:4566" # LocalStack Gateway
    #   - "${LOCALSTACK_HOST_EXTERNAL_PORTS}:4510-4559" # external services port range
    expose:
      - 4566
      - 4510-4559

  redis:
    container_name: ${CONTAINER_NAME}-redis
    ports: []
    #   - '${TOURBILLON_HOST_REDIS_PORT}:6379'
    expose:
      - 6379


  b2e2:
    container_name: ${CONTAINER_NAME}-geco-b2e2
    image: ${CONTAINER_NAME}-geco-b2e2
    volumes:
      - ${APP_PATH}:/app:delegated
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
    expose:
      - 5000
    ports: []
    #   - '${B2E2_HOST_PORT}:5000'
   
    # entrypoint: /bin/bash -c
    # command: >
    #   "python -m flask run --debug -h 0.0.0.0 -p ${B2E2_HOST_PORT}"

  celery:
    image: ${CONTAINER_NAME}-geco-b2e2
    container_name: ${CONTAINER_NAME}-celery
    volumes: 
      - ${APP_PATH}:/app:delegated
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}

  # celery-flower:
  #   container_name: ${CONTAINER_NAME}-celery-flower
  #   # command: bash -c "python -m pip install -U flower && celery -A b2e2.worker_app.celery flower --address=0.0.0.0 --port=${CELERY_FLOWER_HOST_PORT}"
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/1
  #   ports: []
  #   expose: 
  #     - 5555
  #     # - '${CELERY_FLOWER_HOST_PORT}:5555'

  mailpit:
    image: axllent/mailpit
    container_name: ${CONTAINER_NAME}-mailpit
    restart: always
    volumes:
      - mailpit_data:/data
    ports: []
    expose:
      - 8025
      - 1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
  
  
  
  
  


